#!/usr/bin/env bash

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

cat << "EOF" 

 ┌─────────────────────────────────────────────────────────────────────────────┐
 │                               @kullna/editor                                │
 │                           Continuous Integration                            │
 └─────────────────────────────────────────────────────────────────────────────┘

EOF

set -o nounset
set -o pipefail

cat << "EOF" 
 ┌─────────────────────────────────────────────────────────────────────────────┐
 │ 🌥️ Preparing...                                                             │
 └─────────────────────────────────────────────────────────────────────────────┘
EOF

if [ -z "$(npm install -s)" ]; then

  echo -e $Green
  echo "  ✅ Dependencies installed"
  echo -e $Color_Off
else
  echo -e $Red
  echo "  ❌ An error occurred while installing dependencies"
  echo -e $Color_Off
  exit 1
fi

git_status_result=0
if [ -z "$(git status --porcelain)" ]; then
  echo -e $Green
  echo "  ✅ Clean working copy"
  echo -e $Color_Off
else
  echo -e $Yellow
  echo "  ⚠️  DANGER: Working copy is not clean"
  echo -e $Color_Off
  git_status_result=1
fi

cat << "EOF" 
 ┌─────────────────────────────────────────────────────────────────────────────┐
 │ 🔧 Building...                                                              │
 └─────────────────────────────────────────────────────────────────────────────┘

EOF

build_result=0
npm run build:release -s || build_result=$?
if [ $build_result -eq 0 ]; then
  echo -e $Green
  echo "  ✅ Building passed!"
  echo -e $Color_Off
else
  echo -e $Red
  echo "  💩 Building failed!"
  echo -e $Color_Off
fi

cat << "EOF" 
 ┌─────────────────────────────────────────────────────────────────────────────┐
 │ ✨ Linting...                                                               │
 └─────────────────────────────────────────────────────────────────────────────┘

EOF

lint_result=0
npm run lint -s || lint_result=$?
if [ $lint_result -eq 0 ]; then
  echo -e $Green
  echo "  ✅ Linting passed!"
  echo -e $Color_Off
else
  echo -e $Red
  echo "  💩 Linting failed!"
  echo -e $Color_Off
  echo "  📝 Try running: npm run lint:fix - are your husky scripts broken?"
fi

cat << "EOF"
 ┌─────────────────────────────────────────────────────────────────────────────┐
 │ 🐰 Checking Size...                                                         │
 └─────────────────────────────────────────────────────────────────────────────┘

EOF

size_result=0
npm run size -s || size_result=$?
if [ $size_result -eq 0 ]; then
  echo -e $Green
  echo "  ✅ Size check passed!"
  echo -e $Color_Off
else
  echo -e $Red
  echo "  💩 Size check failed!"
  echo -e $Color_Off
fi

if [ $lint_result -eq 0 ] && [ $build_result -eq 0 ] && [ $size_result -eq 0 ]; then
  cat << "EOF" 
 ┌─────────────────────────────────────────────────────────────────────────────┐
 │ 🚀 Success!                                                                 │
 └─────────────────────────────────────────────────────────────────────────────┘
EOF

  echo -e $Green
  echo "  ✅ All checks passed! #ship-it"
  echo -e $Color_Off
  npx motivation | fold -w 80
  echo
  exit 0
else
  cat << "EOF" 
 ┌─────────────────────────────────────────────────────────────────────────────┐
 │ 💩 Problems Found                                                           │
 └─────────────────────────────────────────────────────────────────────────────┘
EOF

  echo -e $Red
  echo "  ❌ One or more steps failed!"
  echo -e $Color_Off
  npx motivation | fold -w 80
  echo
  exit 1
fi
